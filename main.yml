---
- name: DotFiles Configuration
  hosts: localhost
  connection: local
  gather_facts: false    # Disable full fact gathering for speed
  strategy: free         # Enable parallel task execution where possible

  pre_tasks:
    - name: Gather minimal facts
      ansible.builtin.setup:
        gather_subset:
          - min
      tags:
        - always

    - name: GLOBAL | Debian | Update apt cache once
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
      become: true
      when: ansible_os_family == 'Debian'

    - name: GLOBAL | Arch | Update pacman database once
      community.general.pacman:
        update_cache: yes
      become: true
      when: ansible_os_family == 'Archlinux'

    - name: Detect WSL
      ansible.builtin.import_tasks: pre_tasks/detect_wsl.yml
      tags:
        - always

    - name: Detect wsl
      ansible.builtin.debug:
        var: ansible_host_environment_is_wsl
      tags:
        - always

    - name: Confirm Windows PowerShell Execution Policy
      ansible.builtin.import_tasks: pre_tasks/powershell_executionpolicy.yml
      when: ansible_host_environment_is_wsl == "true"
      tags:
        - always

    - name: Detect Host User (WSL)
      ansible.builtin.import_tasks: pre_tasks/whoami_wsl.yml
      when: ansible_host_environment_is_wsl == "true"
      tags:
        - always

    - name: Detect Host User
      ansible.builtin.import_tasks: pre_tasks/whoami.yml
      tags:
        - always

    - name: Display environment info
      ansible.builtin.debug:
        msg:
          - "OS: {{ ansible_distribution }}"
          - "Version: {{ ansible_distribution_version }}"
          - "WSL: {{ ansible_host_environment_is_wsl }}"
          - "User: {{ host_user | default('not set') }}"
          - "WSL Host User: {{ wsl_host_user | default('not applicable') }}"
      tags:
        - always

  vars:
    # Explicitly set Python interpreter to avoid discovery warnings
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
    
    # Default roles to run
    default_roles:
      - bash
      - zsh
      - git
      - uv
      - tmux
      - pdflatex
      - fzf
      # - lsd
      - eza
      - bat
      - cleanup

    # Update control variables
    auto_system_upgrade: true    # Set to false to skip system package upgrades
    auto_zinit_update: true      # Set to false to skip Zinit and plugin updates
    auto_tmux_update: true       # Set to false to skip Tmux and plugin updates

  tasks:
    - name: Set roles to run
      ansible.builtin.set_fact:
        run_roles: "{{ ansible_run_tags != ['all'] and ansible_run_tags or default_roles | difference(exclude_roles | default([])) | sort }}"
      tags:
        - always

    - name: Display roles that will be executed
      ansible.builtin.debug:
        msg: "Running roles: {{ run_roles }}"
      tags:
        - always

    - name: Execute roles
      ansible.builtin.include_role:
        name: "{{ role_item }}"
        apply:
          tags:
            - "{{ role_item }}"
      loop: "{{ run_roles }}"
      loop_control:
        loop_var: role_item
      tags:
        - always
