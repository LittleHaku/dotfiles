---
- name: Install zsh
  ansible.builtin.package:
    name: zsh
    state: present
  become: true

- name: Get zsh path
  ansible.builtin.shell: command -v zsh
  register: zsh_path
  changed_when: false

- name: Check current default shell from passwd
  ansible.builtin.shell: "getent passwd {{ ansible_user_id }} | cut -d: -f7"
  register: current_shell_passwd
  changed_when: false

- name: Set zsh as default shell
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    shell: "{{ zsh_path.stdout }}"
  become: true
  when: current_shell_passwd.stdout != zsh_path.stdout

- name: Check if .zshrc exists
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.zshrc"
  register: zshrc_exists

- name: Backup existing .zshrc if it exists and is not a symlink
  ansible.builtin.copy:
    src: "{{ ansible_env.HOME }}/.zshrc"
    dest: "{{ ansible_env.HOME }}/.zshrc.backup"
    remote_src: true
  when: zshrc_exists.stat.exists and not zshrc_exists.stat.islnk
  ignore_errors: true

- name: Remove existing .zshrc if it exists
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: absent
  when: zshrc_exists.stat.exists

- name: Create symlink for .zshrc
  ansible.builtin.file:
    src: "{{ playbook_dir }}/roles/zsh/files/.zshrc"
    dest: "{{ ansible_env.HOME }}/.zshrc"
    state: link

- name: "ZSH | Update Zinit plugin manager"
  ansible.builtin.shell: |
    export ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
    if [ -d "$ZINIT_HOME" ]; then
      cd "$ZINIT_HOME" && git pull
      echo "Zinit updated successfully"
    else
      echo "Zinit not found, skipping update"
    fi
  args:
    executable: /bin/bash
  register: zinit_update_result
  changed_when: '"Already up to date" not in zinit_update_result.stdout'
  when: auto_zinit_update | default(true)

- name: "ZSH | Update Zinit plugins"
  ansible.builtin.shell: |
    export ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
    if [ -d "$ZINIT_HOME" ]; then
      source "${ZINIT_HOME}/zinit.zsh"
      zinit update --all
      echo "Zinit plugins updated successfully"
    else
      echo "Zinit not found, skipping plugin updates"
    fi
  args:
    executable: /bin/zsh
  register: zinit_plugins_update_result
  changed_when: false
  when: auto_zinit_update | default(true)
  ignore_errors: true

- name: Display shell info
  ansible.builtin.debug:
    msg:
      - "Current shell: {{ current_shell_passwd.stdout }}"
      - "Zsh path: {{ zsh_path.stdout }}"
      - "Zsh installation complete"
      - ".zshrc symlinked from {{ playbook_dir }}/roles/zsh/files/.zshrc"
      - "{{ 'Zinit updated successfully' if zinit_update_result is defined and zinit_update_result.changed else 'Zinit update skipped or already up to date' }}"
      - "{{ 'Zinit plugins updated' if zinit_plugins_update_result is defined and zinit_plugins_update_result.rc == 0 else 'Zinit plugin update skipped or failed' }}"

- name: Include lsd role
  ansible.builtin.include_role:
    name: lsd

- name: Include bat role
  ansible.builtin.include_role:
    name: bat

- name: Include fzf role
  ansible.builtin.include_role:
    name: fzf
