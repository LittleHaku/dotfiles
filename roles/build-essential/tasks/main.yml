---
- name: "{{ role_name | default('BUILD-ESSENTIAL') }} | Checking for Distribution Config: {{ ansible_distribution }}"
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"
  register: distribution_config

- name: "{{ role_name | default('BUILD-ESSENTIAL') }} | Run Tasks: {{ ansible_distribution }}"
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  when: distribution_config.stat.exists

- name: "{{ role_name | default('BUILD-ESSENTIAL') }} | Fallback warning for unsupported distribution"
  ansible.builtin.debug:
    msg: "Warning: No specific configuration found for {{ ansible_distribution }}. Build tools installation skipped."
  when: not distribution_config.stat.exists

- name: "{{ role_name | default('BUILD-ESSENTIAL') }} | Verify make is available"
  ansible.builtin.command: make --version
  register: make_version_check
  failed_when: false
  changed_when: false

- name: "{{ role_name | default('BUILD-ESSENTIAL') }} | Display make version"
  ansible.builtin.debug:
    msg: "Make version: {{ make_version_check.stdout.split('\n')[0] if make_version_check.rc == 0 else 'Make not found' }}"

- name: "{{ role_name | default('BUILD-ESSENTIAL') }} | Verify gcc is available"
  ansible.builtin.command: gcc --version
  register: gcc_version_check
  failed_when: false
  changed_when: false

- name: "{{ role_name | default('BUILD-ESSENTIAL') }} | Display gcc version"
  ansible.builtin.debug:
    msg: "GCC version: {{ gcc_version_check.stdout.split('\n')[0] if gcc_version_check.rc == 0 else 'GCC not found' }}"
