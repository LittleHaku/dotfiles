---
- name: "UV | UBUNTU | Check if uv is already installed"
  ansible.builtin.command: uv --version
  register: uv_version_check
  failed_when: false
  changed_when: false

- name: "UV | UBUNTU | Install/Update uv via official installer"
  ansible.builtin.shell: |
    curl -LsSf https://astral.sh/uv/install.sh | sh
  args:
    creates: "{{ ansible_env.HOME }}/.local/bin/uv"
  when: uv_version_check.rc != 0

- name: "UV | UBUNTU | Try to update uv via self-update"
  ansible.builtin.command: uv self update
  register: uv_self_update_result
  failed_when: false
  when: uv_version_check.rc == 0

- name: "UV | UBUNTU | Reinstall uv via official installer if self-update failed"
  ansible.builtin.shell: |
    curl -LsSf https://astral.sh/uv/install.sh | sh
  when:
    - uv_version_check.rc == 0
    - uv_self_update_result.rc != 0

- name: "UV | UBUNTU | Verify uv installation"
  ansible.builtin.command: "{{ ansible_env.HOME }}/.local/bin/uv --version"
  register: uv_final_version
  changed_when: false

- name: "UV | UBUNTU | Display installed version"
  ansible.builtin.debug:
    msg: "UV installed successfully: {{ uv_final_version.stdout }}"
